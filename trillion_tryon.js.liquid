import {TrillionWidgetApp} from "https://unpkg.com/trillion-widget@0.2/build-lib/trillion-widget.js"

// AR Button
const productOverlay = document.querySelector('.product__overlay');
const arButton = document.querySelector('#ar')
const arPopup = document.querySelector('#arPopup');
const widgetContainer = document.querySelector('#widgetContainer')
const arPopupClose = document.querySelector('#ar__container-close');
let jewelryId = '{{ product.selected_or_first_available_variant.sku }}'
const body = document.querySelector('body')
const selector = document.querySelector('#{{product_form_installment_id}}')
// get the AR Widget instance
const trillionWidget = new TrillionWidgetApp()

function widgetInit() {
    trillionWidget.init(widgetContainer)
    trillionWidget.setJewelryID(jewelryId)
    trillionWidget.refresh()
}

if (arButton) {
    arButton.addEventListener('click', (event) => {
        productOverlay.classList.add('product__overlay-visible')
        arPopup.classList.add('product__card-ar-popup-visible')
        widgetInit()
        body.style.overflowY = 'hidden'
    });
}


if (arPopupClose) {
    arPopupClose.addEventListener('click', (event) => {
        trillionWidget.destroy()
        productOverlay.classList.remove('product__overlay-visible')
        arPopup.classList.remove('product__card-ar-popup-visible')
        body.style.overflowY = 'unset'
    });
}

if (productOverlay) {
    productOverlay.addEventListener('click', (event) => {
        trillionWidget.destroy()
        productOverlay.classList.remove('product__overlay-visible')
        arPopup.classList.remove('product__card-ar-popup-visible')
        body.style.overflowY = 'unset'
    })
}

// Jewelry Exist
function jewelryExists(handle) {
    const data = {
        "data": { id: handle }
    };
    fetch(`https://us-central1-trillionprod.cloudfunctions.net/jewelryExists`, {
        method: "POST",
        mode: "cors",
        headers: {
            "Accept": "application/json",
            "Content-Type": "application/json",
            "Cache-Control": "no-cache"
        },
        body: JSON.stringify(data),
    })
        .then(response => {
            return response.json();
        })
        .then(data => {
            if (data.result) {
                arButton.style.display = "block";
            }
        })
}

jewelryExists(jewelryId)

selector.onchange = () => {
    const queryString = window.location.search
    const params = new URLSearchParams(queryString)
    const getVariant = parseInt(params.get("variant"))


    {% for variant in product.variants %}
    if ({{ variant.id }} === getVariant) {
        jewelryId = '{{ variant.sku }}'
        console.log(jewelryId)
    }
    {% endfor %}
    jewelryExists(jewelryId)
}

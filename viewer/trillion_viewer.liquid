<script type="module">
  import { TrillionViewerApp } from "https://cdn.jsdelivr.net/npm/trillion-viewer@0.38.6/build-lib/trillion-viewer.js";

  // \/ PASTE YOUR KEY HERE \/
  const activationKey = "PASTE_YOUR_ACTIVATION_KEY_HERE";
  // /\ PASTE YOUR KEY HERE /\
  
  const url = document.location.pathname;

  // Choose how to get the SKU
  // Method 1. use sku field in the shopify product
  const jewelryId = "{{ product.selected_or_first_available_variant.sku }}";

  // Method 2. get the sku from the url
  // const jewelryId = url.slice(url.lastIndexOf('/') + 1);
  
  await checkJewelryExists();
  await trillionViewerInit();
  
  async function trillionViewerInit() {
    const slideSelector = '.main-carousel .flickity-slider .carousel-cell';
    const imgSlideSelector = slideSelector + ' img';
    const previewName = 'trillion_viewer_3d_preview';
    
    // wait for slider loading complete
    await waitForElm(slideSelector);
    
    // find slide with trillion preview
    const imgs = document.querySelectorAll(imgSlideSelector);
    const trlnPreviewIndex = [...imgs].findIndex((img) => img.src.includes(previewName));
    const slideNode = document.querySelectorAll(slideSelector)[trlnPreviewIndex];
    if (slideNode === undefined) {
      throw new Error('[Trillion 3D Viewer] Slide not found');
    }
    slideNode.style.width = '100%';
    slideNode.style.height = '100%';
    
    // remove content
    slideNode.innerHTML = '';

    // run TrillionViewerApp into slideNode
    const trillionViewer = new TrillionViewerApp();
  
    trillionViewer.init(slideNode);
    trillionViewer.setServiceActivationKey(activationKey);
    trillionViewer.setJewelryID(jewelryId);
    trillionViewer.refresh();
  }

  async function checkJewelryExists() {
    const response = await fetch(`https://dashboard.trillion.jewelry/api/trillionwebapp/publication-status/${jewelryId}`, {
      method: "GET",
      headers: {
        "Accept": "application/json",
      }
    });
    const data = await response.json();
    if (!data.isPublishedWebSDK) {
      throw new Error('[Trillion 3D Viewer] Product is not published');
    }
  }

  function waitForElm(selector) {
    return new Promise(resolve => {
        const elem = document.querySelector(selector);
        if (elem) {
            return resolve(elem);
        }

        const observer = new MutationObserver(mutations => {
            const elem = document.querySelector(selector);
            if (elem) {
                observer.disconnect();
                resolve(elem);
            }
        });

        observer.observe(document.body, {
            childList: true,
            subtree: true
        });
    });
  }
</script>
